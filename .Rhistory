geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
ReturnPlot[[i]] <- list(p2, p10, p100)
est <- GraphData(
FitList,
c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit", "best_fit")
)
Graph[[i]] <- PlotParameter(
est[[1]], est[[2]], est[[3]],
Region, i,
ignore = c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
print(paste("Station", i))
print(round(FitList[[7]]$mle, 2))
print(FitList[[7]]$formulation)
}
#### arrange plot ####
plot_final <- list()
plot_final <- list()
for (i in 1:6) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("third_sh.png", plot = last_plot(), width = 6, height = 8)
library(ggpubr)
plot_final <- list()
for (i in 1:6) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("third_sh.png", plot = last_plot(), width = 6, height = 8)
i = 1
source("code/NonLinearGEV/GraphData.R")
source("code/NonLinearGEV/PlotParameter.R")
Graph <- list()
ReturnPlot <- list()
for(i in 1:NoSt){
Station <- SummerMaxima[,c(1, i+1)]
names(Station) <- c("DecYear", "Q")
x = Station
fit1 <- FitLinear(as.matrix(x$Q), point[i, 1], point[i, 2], shape[i],se[i])
fit2 <- FitQuadratic(as.matrix(x$Q), shape[i], se[i])
fit3 <- FitAbrupt(as.matrix(x$Q), point[i, 1], point[i, 2], shape[i],se[i])
FitList <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
r <- which.min(c(
fit1[[2]]$AIC,
fit1[[3]]$AIC,
fit1[[4]]$AIC,
fit2$AIC,
fit3$AIC
))
FitList[[7]] <- FitList[[r + 1]]
nR2 <- ReturnLevel(FitList[[7]], 1 / 2)
nR10 <- ReturnLevel(FitList[[7]], 1 / 10)
nR100 <- ReturnLevel(FitList[[7]], 1 / 100)
R2 <- ReturnLevel(fit1[[2]], 1 / 2)
R10 <- ReturnLevel(fit1[[2]], 1 / 10)
R100 <- ReturnLevel(fit1[[2]], 1 / 100)
p2 <- ggplot(nR2) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R2, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
ReturnPlot[[i]] <- list(p2, p10, p100)
est <- GraphData(
FitList,
c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit", "best_fit")
)
i = 1
Graph[[i]] <- PlotParameter(
est[[1]], est[[2]], est[[3]],
Station, i,
ignore = c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
print(paste("Station", i))
print(round(FitList[[7]]$mle, 2))
print(FitList[[7]]$formulation)
}
Graph <- list()
ReturnPlot <- list()
for(i in 1:NoSt){
Station <- SummerMaxima[,c(1, i+1)]
names(Station) <- c("DecYear", "Q")
x = Station
fit1 <- FitLinear(as.matrix(x$Q), point[i, 1], point[i, 2], shape[i],se[i])
fit2 <- FitQuadratic(as.matrix(x$Q), shape[i], se[i])
fit3 <- FitAbrupt(as.matrix(x$Q), point[i, 1], point[i, 2], shape[i],se[i])
FitList <- list(fit1[[1]], fit1[[2]], fit1[[3]], fit1[[4]], fit2, fit3)
r <- which.min(c(
fit1[[2]]$AIC,
fit1[[3]]$AIC,
fit1[[4]]$AIC,
fit2$AIC,
fit3$AIC
))
FitList[[7]] <- FitList[[r + 1]]
nR2 <- ReturnLevel(FitList[[7]], 1 / 2)
nR10 <- ReturnLevel(FitList[[7]], 1 / 10)
nR100 <- ReturnLevel(FitList[[7]], 1 / 100)
R2 <- ReturnLevel(fit1[[2]], 1 / 2)
R10 <- ReturnLevel(fit1[[2]], 1 / 10)
R100 <- ReturnLevel(fit1[[2]], 1 / 100)
p2 <- ggplot(nR2) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R2, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R2, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 2-year"), ylab = "Return level") +
xlab(NULL)+
ylab("Return level") +
scale_linetype_manual(values = c(2, 1))
p10 <- ggplot(nR10) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R10, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R10, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 10-year")) +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
p100 <- ggplot(nR100) +
geom_line(aes(x = Year, y = est, color = "nsGEV", linetype = "model")) +
geom_line(aes(x = Year, y = U, color = "nsGEV", linetype = "95% CI")) +
geom_line(aes(x = Year, y = L, color = "nsGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = est, color = "sGEV", linetype = "model")) +
geom_line(data = R100, aes(x = Year, y = U, color = "sGEV", linetype = "95% CI")) +
geom_line(data = R100, aes(x = Year, y = L, color = "sGEV", linetype = "95% CI")) +
labs(title = paste0("Station", i, ": 100-year"), ylab = "Return level") +
xlab(NULL)+
ylab(NULL)+
scale_linetype_manual(values = c(2, 1))
ReturnPlot[[i]] <- list(p2, p10, p100)
est <- GraphData(
FitList,
c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit", "best_fit")
)
Graph[[i]] <- PlotParameter(
est[[1]], est[[2]], est[[3]],
Station, i,
ignore = c("linear_fit", "s_fit", "single_fit", "double_fit", "quad_fit", "abrupt_fit")
)
print(paste("Station", i))
print(round(FitList[[7]]$mle, 2))
print(FitList[[7]]$formulation)
}
plot_final <- list()
for (i in 1:6) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("third_sh.png", plot = last_plot(), width = 6, height = 8)
plot_final <- list()
for (i in 1:6) {
p <- return_plot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("return3.png", plot = last_plot(), width = 7, height = 9)
plot_final <- list()
for (i in 1:6) {
p <- ReturnPlot[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("return3.png", plot = last_plot(), width = 7, height = 9)
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
#### arrange plot ####
plot_final <- list()
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
#### arrange plot ####
plot_final <- list()
for (i in 1:6) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter1.png", plot = last_plot(), width = 6, height = 8)
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
i = 7
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
View(plot_final)
#### arrange plot ####
plot_final <- list()
for (i in 1:6) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
i = 7
3 * (i - 1) + 1
View(plot_final)
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 1) + 1]] <- p[[1]]
plot_final[[3 * (i - 1) + 2]] <- p[[2]]
plot_final[[3 * (i - 1) + 3]] <- p[[3]]
}
14*3
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
plot_final <- list()
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
i = 10
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
i = 10
p <- Graph[[i]]
p
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final <- list()
i = 7
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 1
plot_final[["legend"]] <- FALSE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
i = 8
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 2
plot_final[["legend"]] <- FALSE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
i = 7
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
i = 8
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 2
plot_final[["legend"]] <- FALSE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
plot_final <- list()
i = 7
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
i = 8
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
i = 9
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 3
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
save(Graph, "data/Graph.Rdata")
save(Graph, file = "data/Graph.Rdata")
load("data/Graph.Rdata")
plot_final <- list()
plot_final <- list()
for (i in 7:14) {
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
View(plot_final)
plot_final <- list()
plot_final <- list()
for (i in 7:12) {
p <- Graph[[i]]
plot_final[[3 * (i - 7) + 1]] <- p[[1]]
plot_final[[3 * (i - 7) + 2]] <- p[[2]]
plot_final[[3 * (i - 7) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter2.png", plot = last_plot(), width = 6, height = 8)
plot_final <- list()
for (i in 13:18) {
p <- Graph[[i]]
plot_final[[3 * (i - 13) + 1]] <- p[[1]]
plot_final[[3 * (i - 13) + 2]] <- p[[2]]
plot_final[[3 * (i - 13) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter3.png", plot = last_plot(), width = 6, height = 8)
plot_final <- list()
for (i in 19:24) {
p <- Graph[[i]]
plot_final[[3 * (i - 19) + 1]] <- p[[1]]
plot_final[[3 * (i - 19) + 2]] <- p[[2]]
plot_final[[3 * (i - 19) + 3]] <- p[[3]]
}
plot_final[["ncol"]] <- 3
plot_final[["nrow"]] <- 6
plot_final[["legend"]] <- FALSE
# plot_final[["common.legend"]] <- TRUE
# save(plot_final,file = "best.Rdata")
do.call(ggarrange, plot_final)
ggsave("Parameter4.png", plot = last_plot(), width = 6, height = 8)
